# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Monolithic architecture Pcf

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'NoSQL/**'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'NoSQL/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      ROOT_PROJECT_PATH: Base/src

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup .NET and Restore Dependecnies
      uses: ./.github/actions/Setup-NET-and-Restore-Dependecies
      
    - name: Build project
      run: dotnet build ${{ env.ROOT_PROJECT_PATH }}/PromoCodeFactory.sln

  test:
    name: Testing
    needs: build
    runs-on: ubuntu-latest
    
    env:
      ROOT_TEST_PROJECT_PATH: Base/src/PromoCodeFactory.UnitTests
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET and Restore Dependecnies
      uses: ./.github/actions/Setup-NET-and-Restore-Dependecies

    - name: Test
      run: dotnet test ${{ env.ROOT_TEST_PROJECT_PATH }}/PromoCodeFactory.UnitTests.csproj

  docker:
    name: Build and Push Docker Image
    needs: test
    runs-on: ubuntu-latest
    
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: yauhenilyushenka/promocodefactory
      IMAGE_TAG: latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Login against a Docker registy
    # https://github.com/docker/login-action
    - name: Log in to GitHub Container Registry ${{ env.REGISTRY }}
      uses: docker/login-action@v3.3.0
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GH_PAT }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5.5.1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker Image with Buildx
    # https://github.com/docker/build-push-action
    - name: Build and push Docker Image
      uses: docker/build-push-action@v6.9.0
      with:
        context: ./Base/src/
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        labels: ${{ steps.meta.outputs.labels }}
        
        
